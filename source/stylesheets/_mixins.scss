@mixin animate($property, $duration, $delay) {
  -webkit-transition: $property $duration $delay;
  -moz-transition:    $property $duration $delay;
  -o-transition:      $property $duration $delay;
  transition:         $property $duration $delay;
}
// Full width background image
@mixin bg-image-card($image-path) {

  height: 400px;

  @media (min-width: $screen-sm-min){
    height: 300px;
  }
  @media (min-width: $screen-md-min){
    height: 400px;
  }
  @media (min-width: $screen-lg-min){
    height: 500px;
  }

  background: image-url('#{$image-path}') no-repeat center center;
  background-size: cover;
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='../assets/#{$image-path}', sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='../assets/#{$image-path}', sizingMethod='scale')";
}

// Retina bg images
@mixin bg-image-retina($image-path, $type, $width, $height, $xpos, $ypos) {
  background-image: image-url($image-path + '.' + $type);
  background-size:  $width $height;
  background-position: $xpos $ypos;

  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx){
    & {
      background-image: image-url($image-path + '@2x.' + $type);
      -webkit-background-size:        $width $height;
      -moz-background-size:           $width $height;
      -o-background-size:             $width $height;
      background-size:                $width $height;

      -webkit-background-position:    $xpos $ypos;
      -moz-background-position:       $xpos $ypos;
      -o-background-position:         $xpos $ypos;
      background-position:            $xpos $ypos;
    }
  }
}

// Border radius
@mixin border-radius($radius) {
  @include border-top-radius($radius);
  @include border-bottom-radius($radius);
}

// Create a grid of cards
// Specify how many cards at each breakpoint
@mixin card-grid($xs-per-row, $sm-per-row, $md-per-row, $lg-per-row) {

  $xs-col: 12/$xs-per-row;
  $sm-col: 12/$sm-per-row;
  $md-col: 12/$md-per-row;
  $lg-col: 12/$lg-per-row;

  @media (max-width: $screen-xs-max) {
    $nChild: $xs-per-row;

    .card {
      @include make-xs-column($xs-col);

      &:nth-child(#{$nChild}n+1) {
        clear: both;
      }
    }
  }

  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    $nChild: $sm-per-row;

    .card {
      @include make-sm-column($sm-col);

      &:nth-child(#{$nChild}n+1) {
        clear: both;
      }
    }
  }

  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    $nChild: $md-per-row;

    .card {
      @include make-md-column($md-col);

      &:nth-child(#{$nChild}n+1) {
        clear: both;
      }
    }
  }

  @media (min-width: $screen-lg) {
    $nChild: $lg-per-row;

    .card {
      @include make-lg-column($lg-col);

      &:nth-child(#{$nChild}n+1) {
        clear: both;
      }
    }
  }
}

// // Full width background image
// @mixin project-bg($image-path, $vert-pos, $horiz-pos) {
//
// }

// Creates project cards, project detail
@mixin project($name, $base-color, $headline-color, $text-color) {
  $base-color-darker: darken($base-color, 22%);
  $base-color-dark: darken($base-color, 15%);
  $base-color-light: lighten($base-color, 10%);
  $base-color-saturate: saturate($base-color-light, 20%);
  $base-color-desaturate: desaturate($base-color, 15%);

  .index .banner.#{$name} {
    background: image-url('project-#{$name}-bg.jpg') no-repeat right 25%;
    background-color: $base-color-dark;
    border-left: 10px solid $base-color-light;

    h2 {
      color: $base-color;
    }
  }

  .projects .card.#{$name} {
		.project-img {
			//@include bg-image-card('projects-card-#{$name}.jpg');
      @include bg-image-card('project-#{$name}-1.jpg');
		}
  	.thumbnail {
  		border-bottom: 2px solid $base-color;
  	}
  }

  .project-detail.projects_#{$name} {
    background-color: $base-color;

    main {
      .project-content {
        //background-color: rgba($base-color-light, 0.85);
        background-color: $base-color-light;
      }

      .project-examples {
        figcaption h5 {
          background-color: $base-color-light;
          color: $text-color;
        }
      }

      .project-header {
        h1 {
          background-color: $headline-color;
          border-color: transparent;
          //border-bottom-color: rgba($text-color, 0.25);
          //border-top-color: rgba($text-color, 0.25);color: $text-color;
          color: $base-color-light;
        }
        p {
          color: $headline-color;
        }
      }

      .project-examples {
    		p {
    			color: $text-color;
    		}
    	}

      .project-topics {
        background: $base-color-dark;

        h2 {
          color: $base-color-saturate;
        }
        li, p {
          color: rgba($text-color, 0.8);
        }
      }
    }
  }
}
